<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Arguments -->
  <arg name="agent_name" default="turtlebot"/>
  <arg name="initial_beta" default="1000.0"/>
  <arg name="gamma" default="10.0"/>
  <arg name="initial_ts_state_from_agent" default="True"/>

  <!-- Load parameters -->
  <!-- Agent name -->
  <param name="agent_name" type="string" value="$(arg agent_name)" />
  <!-- hard and soft task parameters -->
  <rosparam command="load" file="$(find ltl_automaton_turtlebot)/config/example_ltl_formula.yaml" />
  <!-- Transition system -->
  <param name="transition_system_textfile" type="str" textfile="$(find ltl_automaton_turtlebot)/config/example_ts.yaml" />
  <!-- Initial value of beta and gamme-->
  <param name="initial_beta" type="double" value="$(arg initial_beta)" />
  <param name="gamma" type="double" value="$(arg gamma)" />

  <!-- Run LTL planner node -->
  <include file="$(find ltl_automaton_planner)/launch/ltl_planner.launch" >
    <arg name="initial_ts_state_from_agent" default="True"/>
  </include>

  <!-- Run Turtlebot LTL node with the 2D pose region monitor-->
  <node name="ltl_automaton_turtlebot_node" pkg="ltl_automaton_turtlebot" type="ltl_automaton_turtlebot_node.py" output="screen" />
  <node name="$(arg agent_name)_region_2d_pose_monitor" pkg="ltl_automaton_std_transition_systems" type="region_2d_pose_monitor.py" output="screen" >
    <remap from="agent_2d_region_pose" to="qualisys/$(arg agent_name)/pose" />
  </node>

  <!-- Turtlebot move base node -->
  <include file="$(find ltl_automaton_turtlebot)/launch/turtlebot_move_base.launch" />
  
  <include file="$(find mocap_qualisys)/launch/qualisys.launch" >
    <param name="publish_tf" value="false" />
  </include>
  

</launch>
